	В съвременното масово съзнание битува един много интересен мит. Според него, компютрите са смъртен враг на бюрокрацията и рано или късно ще я унищожат. Митът е извънредно устойчив и натрапчив — още по времето на бай Тошо всички си мислехме, че ето, още само няколко години, докато се „кюмпютуризираме“, и 90% от чиновниците ще бъдат съкратени поради ненужност и ще ги пратят да се занимават с по-полезни неща, вместо да ядат грешни бюджетни пари. Не че това твърдение е напълно невярно — напротив, още Паркинсън е отбелязал, че чиновниците главно си създават работа един на друг, — така че ако се свръхоптимизира по някакъв начин бюрократичната машина, то може би наистина 90% от хората в нея ще се окажат излишни. Но ето въпрос: защо се разчита толкова на компютрите в тази оптимизация? Ако вземем административните служби в Западна Европа, дори в Америка — та те са компютъризирани доста от отдавна, без при това да се получат никакви свръхсъкращения; дори напротив, чиновниците продължават да се плодят и размножават. (За справка — знаменитата „евробюрокрация“, която извади от равновесие дори свикналите на всякаква чиновническа власт европейци.) Така че компютърът сам по себе си изобщо не е враг на бюрокрацията. Той по-скоро е неин инструмент, който може да я направи повече или по-малко ефективна — но не и да я унищожи.
	Но има и нещо повече, нещо още по-дълбоко. Ако се вгледаме в самите принципи и архитектура на компютъра, ще видим, че те всъщност копират принципите и структурата на бюрократичната система. Компютърът — това е един малък модел на бюрократично учреждение.


	Наистина, съвременният цифров компютър е ФОРМАЛНО логическо устройство: въз основа на някаква точна програма ( = бюрократична инструкция) се обработват някакви данни ( = документи). При това програмите и данните са разделени, въпреки че се съхраняват на едно и също устройство. А онзи, който ги обработва, т.е. ПРОЦЕСОРЪТ ( = чиновникът), е съвсем отделно устройство, пригодено да изпълнява потенциално ВСЯКАКВИ програми/инструкции (написани, разбира се, на съответния машинен/ бюрократичен език), без при това да се отклонява на нито една команда встрани.
	Отличителна черта на тази формална логика е нейната абсолютна НЕГЪВКАВОСТ — всичките действия са предварително зададени в програмата; ако искаме да накараме бюрократичния компютър да свърши нещо, което не е залегнало в нея, трябва да пишем нова програма. Такава система е органично неспособна на самообучение, т.е. не може без команда отвън да коригира поведението си при промяна на потока от данни (ако, разбира се, това не е предвидено априори в програмата). По същия начин и откриването на грешки (както в програмата, така и в данните) се свежда до някаква формална проверка за легитимност — подпис и печат ( = контролна сума), формат.
	Ако отидем на едно ниво по-нагоре — при операционните системи, — ще видим същата бюрократична формалност. За да извърши някакво действие, или да разреши на потребителстата програма да го извърши, ОС поема някаква заявка, гледа състоянието на най-различни „документи“ — полета, флагове, контролни пакети — после, в някои случаи, изисква от потребителската програма още такива документи-заявки, тези заявки почват да странствуват по сервизи и обслужващи подпрограми, които на свой ред връщат някакви документи-отговори, и т.н. Според мои познати системни програмисти, в този аспект най-„бюрократизираната“ ОС е Windows NT: при нея всяко действие е свързано с безброй проверки, заявки, викания на различни подпрограми и пр. — и при всичката тази свръхпроверяемост все още се намират прозорци в защитата на системата, през които се промъкват хакерите.
	Тук може да се отбележи и една чисто езикова особеност: в първите езици за програмиране (напр. Фортран) терминът „процедура“ (subroutine) е дошъл именно от бюрократичния жаргон — от френската дума routine, която на свой ред произлиза от route (път, в преносен смисъл — начин) и от която произлиза нашето понятие „рутина“. По горе-долу същия начин думите „файл“ и „фолдер“ (англ. — „папка“) идват пак от езика на бюрокрацията.


	Но каква друга, различна, небюрократична и НЕФОРМАЛНА структура на изчислителния процес бихме могли да противопоставим на описаната по-горе?
	Една възможна алтернатива е невронната мрежа (НМ).
	Всъщност парадигмата на невронномрежовите изчисления е ако не напълно противоположна на идеята за цифровите компютри, то във всеки случай е качествено различна нейна алтернатива. Какво имам предвид? Да започнем с това, че класическата архитектура с разделени помежду си процесор и памет не съществува при НМ: там изчислителната мрежа се състои от голям брой прости и еднотипни функционални единици — неврони, свързани помежду си, и данните се съхраняват там, където се обработват — в невроните и връзките. Тази архитектура влече със себе си още две важни принципни различия от бюрократичните цифрови компютри. Първо, паметта се адресира по съдържание, а не по входящ номер; това значи, че при извличане на данни от мрежата не трябва да указваме физически или логически адрес/номер, а самото съдържание, което търсим, служи като ключ за извличане. И второ, информацията се обработва паралелно, с едновременното участие на много неврони от мрежата; дори може да твърдим, че тъй като връзките между невроните служат едновременно и за процесор, и за памет, то данните в известен смисъл се самообработват — а мрежата е само нещо като изчислителна среда.
	Докато информацията във формалните компютри се въвежда в символен вид, при това — отделно данните и отделно програмата за тяхната обработка, то НМ усвоява външните данни посредством ОБУЧЕНИЕ, а бюрократична програма/ инструкция, в строгия смисъл на думата, не съществува: точният процес на обучение зависи само от архитектурата на мрежата и от предисторията на процеса, тоест с каква информация е била обучена мрежата преди това. НМ се учат от примери, също както децата се учат да различават куче от котка, и така проявяват известни структурни способности за обобщение.
	НМ обработва информацията по принципно същия начин, както и човешкият мозък — нали той сам по себе си представлява сложна система от десетки милиарди неврони. Затова и невронните изчисления наследяват някои свойства и особености, характерни за човешкото мислене и абсолютно неприсъщи на формалните компютри и бюрокрацията: възможност за спонтанно обучение и за работа в случай на лошо дефинирани данни. А ако част от невроните се повредят (дори немалка част — от порядъка на десетки проценти!), то поведението на мрежата само леко ще се влоши, след което тя бързо ще се дообучи. За сравнение — само един грешен байт в програмата или данните в дигиталния компютър е в състояние тотално да обърка целия бюрократично- изчислителен процес. Това е следствие от разпределеното представяне на данните, в противовес на строгото локализиране и формално типизиране, каквото имаме при цифровите машини и бюрократичните документи.


	Подобни качествени разлики спрямо класическите формални компютри показват и някои други съвременни изчислителни методи — размитата логика, донякъде генетичните алгоритми. (За сравнение: бюрокрация с размита логика или пък с „генетична“ еволюция на инструкциите и критериите никой не е виждал.) Всички тези нестроги изчислителни техники се групират най-общо в класа „soft-computing methods“, но според мен много по-изразително би било названието „неформални изчислителни системи“, или просто — НЕФОРМАЛНИ КОМПЮТРИ.
	В контекста на последната забележка показателен ще бъде един факт от историята на компютърната техника. В началото на 40-те години, когато тя още е в самия си зародиш, нищо не подсказва, ще по-нататък ще се развие почти изключително в руслото на формалните дигитални машини. Тогава едновременно с работата по цифровите машини се водят изследвания и върху алтернативнии изчислителни устройства. През 1943 г. Маккълок и Питс показват, че невронната мрежа всъщност е универсално изчислително устройство — т.е. въвеждат невронна версия на машината на Тюринг. По същото време са построени и първите електронни аналогови компютри. Но после, към края на 40-те, изследователската дейност се прехвърля почти изцяло върху цифровите компютри. И не само защото те са универсални и лесно управляеми. По-скоро техният чисто формален принцип на функциониране се оказва по- близък, по-познат и лесен за оценяване както за онези, които тогава са поръчвали и финансирали изследванията в компютърната област (главно военната бюрокрация), така и за самите специалисти. Тъй че в известен смисъл бюрокрацията ражда компютъра по свой образ и подобие.

	* * *

	Ако се върнем на мита, с което започнахме — за войната между компютрите и чиновниците, — виждаме, че той си е мит и нищо повече. Как би могла бюрокрацията да се плаши от компютърната техника, след като прекрасно знае, че на практика самата тя я е породила, нейна е била социалната поръчка, довела до появата й? И освен това — да не забравяме, че двете аксиоми на Паркинсън: 1) чиновникът желае да умножава подчинените си, а не съперниците си, и 2) чиновниците си създават работа един на друг, — водят в резултат до безсмъртния закон на Паркинсън: „Bроят на чиновниците нараства със скорост, близка до константа (5% годишно) и по никакъв начин не зависи от количеството работа, която трябва да се свърши, ако изобщо има такава.“ А всяка работа се разтегля дотолкова, че да заеме цялото време и човешки ресурси, заделени за нея. И тези непоклатими бюрократични закони си действат и ще продължават да действат при всички правителства, режими и вождове — и независимо от всички видове компютри. Последните са само инструменти, организиращи ръста на бюрократичната машина и осигуряващи постоянната й експанзия във все повече сфери на живота.


	_София, 07.01.1999_
